/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package mx.movistar.col.lead.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

import mx.movistar.col.lead.model.LeadScoring;
import mx.movistar.col.lead.model.LeadScoringModel;

/**
 * The base model implementation for the LeadScoring service. Represents a row in the &quot;LEAD_LeadScoring&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>LeadScoringModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LeadScoringImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LeadScoringImpl
 * @generated
 */
@ProviderType
public class LeadScoringModelImpl
	extends BaseModelImpl<LeadScoring> implements LeadScoringModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a lead scoring model instance should use the <code>LeadScoring</code> interface instead.
	 */
	public static final String TABLE_NAME = "LEAD_LeadScoring";

	public static final Object[][] TABLE_COLUMNS = {
		{"leadScoringId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"leadId", Types.BIGINT}, {"createDate", Types.TIMESTAMP},
		{"msisdn", Types.VARCHAR}, {"email", Types.VARCHAR},
		{"name", Types.VARCHAR}, {"surname", Types.VARCHAR},
		{"extra1", Types.VARCHAR}, {"extra2", Types.VARCHAR},
		{"extra3", Types.VARCHAR}, {"dateSchedule", Types.TIMESTAMP},
		{"url", Types.VARCHAR}, {"utmSource", Types.VARCHAR},
		{"utmMedium", Types.VARCHAR}, {"utmContent", Types.VARCHAR},
		{"utmCampaign", Types.VARCHAR}, {"utmTerm", Types.VARCHAR},
		{"otherSource", Types.VARCHAR}, {"responseWS", Types.VARCHAR},
		{"idCCWS", Types.VARCHAR}, {"reTryDate", Types.TIMESTAMP},
		{"ipCliente", Types.VARCHAR}, {"origen", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("leadScoringId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("leadId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("msisdn", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("surname", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("extra1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("extra2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("extra3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateSchedule", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("url", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("utmSource", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("utmMedium", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("utmContent", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("utmCampaign", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("utmTerm", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("otherSource", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("responseWS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("idCCWS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("reTryDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ipCliente", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("origen", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table LEAD_LeadScoring (leadScoringId LONG not null primary key,groupId LONG,leadId LONG,createDate DATE null,msisdn VARCHAR(75) null,email VARCHAR(75) null,name VARCHAR(75) null,surname VARCHAR(75) null,extra1 VARCHAR(75) null,extra2 VARCHAR(75) null,extra3 VARCHAR(75) null,dateSchedule DATE null,url VARCHAR(500) null,utmSource VARCHAR(75) null,utmMedium VARCHAR(75) null,utmContent VARCHAR(75) null,utmCampaign VARCHAR(75) null,utmTerm VARCHAR(75) null,otherSource VARCHAR(75) null,responseWS VARCHAR(75) null,idCCWS VARCHAR(75) null,reTryDate DATE null,ipCliente VARCHAR(75) null,origen VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP = "drop table LEAD_LeadScoring";

	public static final String ORDER_BY_JPQL =
		" ORDER BY leadScoring.leadScoringId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY LEAD_LeadScoring.leadScoringId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		mx.movistar.col.lead.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.mx.movistar.col.lead.model.LeadScoring"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		mx.movistar.col.lead.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.mx.movistar.col.lead.model.LeadScoring"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		mx.movistar.col.lead.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.mx.movistar.col.lead.model.LeadScoring"),
		true);

	public static final long GROUPID_COLUMN_BITMASK = 1L;

	public static final long LEADSCORINGID_COLUMN_BITMASK = 2L;

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		mx.movistar.col.lead.service.util.ServiceProps.get(
			"lock.expiration.time.mx.movistar.col.lead.model.LeadScoring"));

	public LeadScoringModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _leadScoringId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLeadScoringId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _leadScoringId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LeadScoring.class;
	}

	@Override
	public String getModelClassName() {
		return LeadScoring.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<LeadScoring, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<LeadScoring, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<LeadScoring, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((LeadScoring)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<LeadScoring, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<LeadScoring, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(LeadScoring)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<LeadScoring, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<LeadScoring, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, LeadScoring>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			LeadScoring.class.getClassLoader(), LeadScoring.class,
			ModelWrapper.class);

		try {
			Constructor<LeadScoring> constructor =
				(Constructor<LeadScoring>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException roe) {
					throw new InternalError(roe);
				}
			};
		}
		catch (NoSuchMethodException nsme) {
			throw new InternalError(nsme);
		}
	}

	private static final Map<String, Function<LeadScoring, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<LeadScoring, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<LeadScoring, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<LeadScoring, Object>>();
		Map<String, BiConsumer<LeadScoring, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<LeadScoring, ?>>();

		attributeGetterFunctions.put(
			"leadScoringId",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getLeadScoringId();
				}

			});
		attributeSetterBiConsumers.put(
			"leadScoringId",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(
					LeadScoring leadScoring, Object leadScoringId) {

					leadScoring.setLeadScoringId((Long)leadScoringId);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object groupId) {
					leadScoring.setGroupId((Long)groupId);
				}

			});
		attributeGetterFunctions.put(
			"leadId",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getLeadId();
				}

			});
		attributeSetterBiConsumers.put(
			"leadId",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object leadId) {
					leadScoring.setLeadId((Long)leadId);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object createDate) {
					leadScoring.setCreateDate((Date)createDate);
				}

			});
		attributeGetterFunctions.put(
			"msisdn",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getMsisdn();
				}

			});
		attributeSetterBiConsumers.put(
			"msisdn",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object msisdn) {
					leadScoring.setMsisdn((String)msisdn);
				}

			});
		attributeGetterFunctions.put(
			"email",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getEmail();
				}

			});
		attributeSetterBiConsumers.put(
			"email",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object email) {
					leadScoring.setEmail((String)email);
				}

			});
		attributeGetterFunctions.put(
			"name",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getName();
				}

			});
		attributeSetterBiConsumers.put(
			"name",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object name) {
					leadScoring.setName((String)name);
				}

			});
		attributeGetterFunctions.put(
			"surname",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getSurname();
				}

			});
		attributeSetterBiConsumers.put(
			"surname",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object surname) {
					leadScoring.setSurname((String)surname);
				}

			});
		attributeGetterFunctions.put(
			"extra1",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getExtra1();
				}

			});
		attributeSetterBiConsumers.put(
			"extra1",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object extra1) {
					leadScoring.setExtra1((String)extra1);
				}

			});
		attributeGetterFunctions.put(
			"extra2",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getExtra2();
				}

			});
		attributeSetterBiConsumers.put(
			"extra2",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object extra2) {
					leadScoring.setExtra2((String)extra2);
				}

			});
		attributeGetterFunctions.put(
			"extra3",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getExtra3();
				}

			});
		attributeSetterBiConsumers.put(
			"extra3",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object extra3) {
					leadScoring.setExtra3((String)extra3);
				}

			});
		attributeGetterFunctions.put(
			"dateSchedule",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getDateSchedule();
				}

			});
		attributeSetterBiConsumers.put(
			"dateSchedule",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(
					LeadScoring leadScoring, Object dateSchedule) {

					leadScoring.setDateSchedule((Date)dateSchedule);
				}

			});
		attributeGetterFunctions.put(
			"url",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getUrl();
				}

			});
		attributeSetterBiConsumers.put(
			"url",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object url) {
					leadScoring.setUrl((String)url);
				}

			});
		attributeGetterFunctions.put(
			"utmSource",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getUtmSource();
				}

			});
		attributeSetterBiConsumers.put(
			"utmSource",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object utmSource) {
					leadScoring.setUtmSource((String)utmSource);
				}

			});
		attributeGetterFunctions.put(
			"utmMedium",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getUtmMedium();
				}

			});
		attributeSetterBiConsumers.put(
			"utmMedium",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object utmMedium) {
					leadScoring.setUtmMedium((String)utmMedium);
				}

			});
		attributeGetterFunctions.put(
			"utmContent",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getUtmContent();
				}

			});
		attributeSetterBiConsumers.put(
			"utmContent",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object utmContent) {
					leadScoring.setUtmContent((String)utmContent);
				}

			});
		attributeGetterFunctions.put(
			"utmCampaign",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getUtmCampaign();
				}

			});
		attributeSetterBiConsumers.put(
			"utmCampaign",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(
					LeadScoring leadScoring, Object utmCampaign) {

					leadScoring.setUtmCampaign((String)utmCampaign);
				}

			});
		attributeGetterFunctions.put(
			"utmTerm",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getUtmTerm();
				}

			});
		attributeSetterBiConsumers.put(
			"utmTerm",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object utmTerm) {
					leadScoring.setUtmTerm((String)utmTerm);
				}

			});
		attributeGetterFunctions.put(
			"otherSource",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getOtherSource();
				}

			});
		attributeSetterBiConsumers.put(
			"otherSource",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(
					LeadScoring leadScoring, Object otherSource) {

					leadScoring.setOtherSource((String)otherSource);
				}

			});
		attributeGetterFunctions.put(
			"responseWS",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getResponseWS();
				}

			});
		attributeSetterBiConsumers.put(
			"responseWS",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object responseWS) {
					leadScoring.setResponseWS((String)responseWS);
				}

			});
		attributeGetterFunctions.put(
			"idCCWS",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getIdCCWS();
				}

			});
		attributeSetterBiConsumers.put(
			"idCCWS",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object idCCWS) {
					leadScoring.setIdCCWS((String)idCCWS);
				}

			});
		attributeGetterFunctions.put(
			"reTryDate",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getReTryDate();
				}

			});
		attributeSetterBiConsumers.put(
			"reTryDate",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object reTryDate) {
					leadScoring.setReTryDate((Date)reTryDate);
				}

			});
		attributeGetterFunctions.put(
			"ipCliente",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getIpCliente();
				}

			});
		attributeSetterBiConsumers.put(
			"ipCliente",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object ipCliente) {
					leadScoring.setIpCliente((String)ipCliente);
				}

			});
		attributeGetterFunctions.put(
			"origen",
			new Function<LeadScoring, Object>() {

				@Override
				public Object apply(LeadScoring leadScoring) {
					return leadScoring.getOrigen();
				}

			});
		attributeSetterBiConsumers.put(
			"origen",
			new BiConsumer<LeadScoring, Object>() {

				@Override
				public void accept(LeadScoring leadScoring, Object origen) {
					leadScoring.setOrigen((String)origen);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public long getLeadScoringId() {
		return _leadScoringId;
	}

	@Override
	public void setLeadScoringId(long leadScoringId) {
		_leadScoringId = leadScoringId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getLeadId() {
		return _leadId;
	}

	@Override
	public void setLeadId(long leadId) {
		_leadId = leadId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public String getMsisdn() {
		if (_msisdn == null) {
			return "";
		}
		else {
			return _msisdn;
		}
	}

	@Override
	public void setMsisdn(String msisdn) {
		_msisdn = msisdn;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return "";
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return "";
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getSurname() {
		if (_surname == null) {
			return "";
		}
		else {
			return _surname;
		}
	}

	@Override
	public void setSurname(String surname) {
		_surname = surname;
	}

	@Override
	public String getExtra1() {
		if (_extra1 == null) {
			return "";
		}
		else {
			return _extra1;
		}
	}

	@Override
	public void setExtra1(String extra1) {
		_extra1 = extra1;
	}

	@Override
	public String getExtra2() {
		if (_extra2 == null) {
			return "";
		}
		else {
			return _extra2;
		}
	}

	@Override
	public void setExtra2(String extra2) {
		_extra2 = extra2;
	}

	@Override
	public String getExtra3() {
		if (_extra3 == null) {
			return "";
		}
		else {
			return _extra3;
		}
	}

	@Override
	public void setExtra3(String extra3) {
		_extra3 = extra3;
	}

	@Override
	public Date getDateSchedule() {
		return _dateSchedule;
	}

	@Override
	public void setDateSchedule(Date dateSchedule) {
		_dateSchedule = dateSchedule;
	}

	@Override
	public String getUrl() {
		if (_url == null) {
			return "";
		}
		else {
			return _url;
		}
	}

	@Override
	public void setUrl(String url) {
		_url = url;
	}

	@Override
	public String getUtmSource() {
		if (_utmSource == null) {
			return "";
		}
		else {
			return _utmSource;
		}
	}

	@Override
	public void setUtmSource(String utmSource) {
		_utmSource = utmSource;
	}

	@Override
	public String getUtmMedium() {
		if (_utmMedium == null) {
			return "";
		}
		else {
			return _utmMedium;
		}
	}

	@Override
	public void setUtmMedium(String utmMedium) {
		_utmMedium = utmMedium;
	}

	@Override
	public String getUtmContent() {
		if (_utmContent == null) {
			return "";
		}
		else {
			return _utmContent;
		}
	}

	@Override
	public void setUtmContent(String utmContent) {
		_utmContent = utmContent;
	}

	@Override
	public String getUtmCampaign() {
		if (_utmCampaign == null) {
			return "";
		}
		else {
			return _utmCampaign;
		}
	}

	@Override
	public void setUtmCampaign(String utmCampaign) {
		_utmCampaign = utmCampaign;
	}

	@Override
	public String getUtmTerm() {
		if (_utmTerm == null) {
			return "";
		}
		else {
			return _utmTerm;
		}
	}

	@Override
	public void setUtmTerm(String utmTerm) {
		_utmTerm = utmTerm;
	}

	@Override
	public String getOtherSource() {
		if (_otherSource == null) {
			return "";
		}
		else {
			return _otherSource;
		}
	}

	@Override
	public void setOtherSource(String otherSource) {
		_otherSource = otherSource;
	}

	@Override
	public String getResponseWS() {
		if (_responseWS == null) {
			return "";
		}
		else {
			return _responseWS;
		}
	}

	@Override
	public void setResponseWS(String responseWS) {
		_responseWS = responseWS;
	}

	@Override
	public String getIdCCWS() {
		if (_idCCWS == null) {
			return "";
		}
		else {
			return _idCCWS;
		}
	}

	@Override
	public void setIdCCWS(String idCCWS) {
		_idCCWS = idCCWS;
	}

	@Override
	public Date getReTryDate() {
		return _reTryDate;
	}

	@Override
	public void setReTryDate(Date reTryDate) {
		_reTryDate = reTryDate;
	}

	@Override
	public String getIpCliente() {
		if (_ipCliente == null) {
			return "";
		}
		else {
			return _ipCliente;
		}
	}

	@Override
	public void setIpCliente(String ipCliente) {
		_ipCliente = ipCliente;
	}

	@Override
	public String getOrigen() {
		if (_origen == null) {
			return "";
		}
		else {
			return _origen;
		}
	}

	@Override
	public void setOrigen(String origen) {
		_origen = origen;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, LeadScoring.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LeadScoring toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, LeadScoring>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LeadScoringImpl leadScoringImpl = new LeadScoringImpl();

		leadScoringImpl.setLeadScoringId(getLeadScoringId());
		leadScoringImpl.setGroupId(getGroupId());
		leadScoringImpl.setLeadId(getLeadId());
		leadScoringImpl.setCreateDate(getCreateDate());
		leadScoringImpl.setMsisdn(getMsisdn());
		leadScoringImpl.setEmail(getEmail());
		leadScoringImpl.setName(getName());
		leadScoringImpl.setSurname(getSurname());
		leadScoringImpl.setExtra1(getExtra1());
		leadScoringImpl.setExtra2(getExtra2());
		leadScoringImpl.setExtra3(getExtra3());
		leadScoringImpl.setDateSchedule(getDateSchedule());
		leadScoringImpl.setUrl(getUrl());
		leadScoringImpl.setUtmSource(getUtmSource());
		leadScoringImpl.setUtmMedium(getUtmMedium());
		leadScoringImpl.setUtmContent(getUtmContent());
		leadScoringImpl.setUtmCampaign(getUtmCampaign());
		leadScoringImpl.setUtmTerm(getUtmTerm());
		leadScoringImpl.setOtherSource(getOtherSource());
		leadScoringImpl.setResponseWS(getResponseWS());
		leadScoringImpl.setIdCCWS(getIdCCWS());
		leadScoringImpl.setReTryDate(getReTryDate());
		leadScoringImpl.setIpCliente(getIpCliente());
		leadScoringImpl.setOrigen(getOrigen());

		leadScoringImpl.resetOriginalValues();

		return leadScoringImpl;
	}

	@Override
	public int compareTo(LeadScoring leadScoring) {
		long primaryKey = leadScoring.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LeadScoring)) {
			return false;
		}

		LeadScoring leadScoring = (LeadScoring)obj;

		long primaryKey = leadScoring.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		LeadScoringModelImpl leadScoringModelImpl = this;

		leadScoringModelImpl._originalGroupId = leadScoringModelImpl._groupId;

		leadScoringModelImpl._setOriginalGroupId = false;

		leadScoringModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LeadScoring> toCacheModel() {
		LeadScoringCacheModel leadScoringCacheModel =
			new LeadScoringCacheModel();

		leadScoringCacheModel.leadScoringId = getLeadScoringId();

		leadScoringCacheModel.groupId = getGroupId();

		leadScoringCacheModel.leadId = getLeadId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			leadScoringCacheModel.createDate = createDate.getTime();
		}
		else {
			leadScoringCacheModel.createDate = Long.MIN_VALUE;
		}

		leadScoringCacheModel.msisdn = getMsisdn();

		String msisdn = leadScoringCacheModel.msisdn;

		if ((msisdn != null) && (msisdn.length() == 0)) {
			leadScoringCacheModel.msisdn = null;
		}

		leadScoringCacheModel.email = getEmail();

		String email = leadScoringCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			leadScoringCacheModel.email = null;
		}

		leadScoringCacheModel.name = getName();

		String name = leadScoringCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			leadScoringCacheModel.name = null;
		}

		leadScoringCacheModel.surname = getSurname();

		String surname = leadScoringCacheModel.surname;

		if ((surname != null) && (surname.length() == 0)) {
			leadScoringCacheModel.surname = null;
		}

		leadScoringCacheModel.extra1 = getExtra1();

		String extra1 = leadScoringCacheModel.extra1;

		if ((extra1 != null) && (extra1.length() == 0)) {
			leadScoringCacheModel.extra1 = null;
		}

		leadScoringCacheModel.extra2 = getExtra2();

		String extra2 = leadScoringCacheModel.extra2;

		if ((extra2 != null) && (extra2.length() == 0)) {
			leadScoringCacheModel.extra2 = null;
		}

		leadScoringCacheModel.extra3 = getExtra3();

		String extra3 = leadScoringCacheModel.extra3;

		if ((extra3 != null) && (extra3.length() == 0)) {
			leadScoringCacheModel.extra3 = null;
		}

		Date dateSchedule = getDateSchedule();

		if (dateSchedule != null) {
			leadScoringCacheModel.dateSchedule = dateSchedule.getTime();
		}
		else {
			leadScoringCacheModel.dateSchedule = Long.MIN_VALUE;
		}

		leadScoringCacheModel.url = getUrl();

		String url = leadScoringCacheModel.url;

		if ((url != null) && (url.length() == 0)) {
			leadScoringCacheModel.url = null;
		}

		leadScoringCacheModel.utmSource = getUtmSource();

		String utmSource = leadScoringCacheModel.utmSource;

		if ((utmSource != null) && (utmSource.length() == 0)) {
			leadScoringCacheModel.utmSource = null;
		}

		leadScoringCacheModel.utmMedium = getUtmMedium();

		String utmMedium = leadScoringCacheModel.utmMedium;

		if ((utmMedium != null) && (utmMedium.length() == 0)) {
			leadScoringCacheModel.utmMedium = null;
		}

		leadScoringCacheModel.utmContent = getUtmContent();

		String utmContent = leadScoringCacheModel.utmContent;

		if ((utmContent != null) && (utmContent.length() == 0)) {
			leadScoringCacheModel.utmContent = null;
		}

		leadScoringCacheModel.utmCampaign = getUtmCampaign();

		String utmCampaign = leadScoringCacheModel.utmCampaign;

		if ((utmCampaign != null) && (utmCampaign.length() == 0)) {
			leadScoringCacheModel.utmCampaign = null;
		}

		leadScoringCacheModel.utmTerm = getUtmTerm();

		String utmTerm = leadScoringCacheModel.utmTerm;

		if ((utmTerm != null) && (utmTerm.length() == 0)) {
			leadScoringCacheModel.utmTerm = null;
		}

		leadScoringCacheModel.otherSource = getOtherSource();

		String otherSource = leadScoringCacheModel.otherSource;

		if ((otherSource != null) && (otherSource.length() == 0)) {
			leadScoringCacheModel.otherSource = null;
		}

		leadScoringCacheModel.responseWS = getResponseWS();

		String responseWS = leadScoringCacheModel.responseWS;

		if ((responseWS != null) && (responseWS.length() == 0)) {
			leadScoringCacheModel.responseWS = null;
		}

		leadScoringCacheModel.idCCWS = getIdCCWS();

		String idCCWS = leadScoringCacheModel.idCCWS;

		if ((idCCWS != null) && (idCCWS.length() == 0)) {
			leadScoringCacheModel.idCCWS = null;
		}

		Date reTryDate = getReTryDate();

		if (reTryDate != null) {
			leadScoringCacheModel.reTryDate = reTryDate.getTime();
		}
		else {
			leadScoringCacheModel.reTryDate = Long.MIN_VALUE;
		}

		leadScoringCacheModel.ipCliente = getIpCliente();

		String ipCliente = leadScoringCacheModel.ipCliente;

		if ((ipCliente != null) && (ipCliente.length() == 0)) {
			leadScoringCacheModel.ipCliente = null;
		}

		leadScoringCacheModel.origen = getOrigen();

		String origen = leadScoringCacheModel.origen;

		if ((origen != null) && (origen.length() == 0)) {
			leadScoringCacheModel.origen = null;
		}

		return leadScoringCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<LeadScoring, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<LeadScoring, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<LeadScoring, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((LeadScoring)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<LeadScoring, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<LeadScoring, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<LeadScoring, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((LeadScoring)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, LeadScoring>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private long _leadScoringId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _leadId;
	private Date _createDate;
	private String _msisdn;
	private String _email;
	private String _name;
	private String _surname;
	private String _extra1;
	private String _extra2;
	private String _extra3;
	private Date _dateSchedule;
	private String _url;
	private String _utmSource;
	private String _utmMedium;
	private String _utmContent;
	private String _utmCampaign;
	private String _utmTerm;
	private String _otherSource;
	private String _responseWS;
	private String _idCCWS;
	private Date _reTryDate;
	private String _ipCliente;
	private String _origen;
	private long _columnBitmask;
	private LeadScoring _escapedModel;

}